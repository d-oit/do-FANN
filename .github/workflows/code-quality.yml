name: Code Quality & Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  rust-check:
    name: Rust Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --all-features

      - name: Security audit
        uses: actions-rs/audit@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  javascript-check:
    name: JavaScript Code Quality
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ruv-swarm/npm

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ruv-swarm/npm/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint:check

      - name: Run tests
        run: npm run test:all

      - name: Check test coverage
        run: npm run test:coverage

  wasm-build:
    name: WebAssembly Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-wasm-${{ hashFiles('**/Cargo.lock') }}

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Build WASM packages
        run: |
          cd ruv-swarm/crates/ruv-swarm-wasm
          wasm-pack build --target web --out-dir ../../../npm/wasm

      - name: Test WASM loading
        run: |
          cd ruv-swarm/npm
          npm install
          node test/test-wasm-loading.js

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [rust-check, javascript-check, wasm-build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd ruv-swarm/npm
          npm ci

      - name: Run integration tests
        run: |
          cd ruv-swarm/npm
          npm run test:comprehensive

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: |
            ruv-swarm/npm/coverage/
            ruv-swarm/npm/eslint-report.json

  performance-benchmark:
    name: Performance Benchmarking
    runs-on: ubuntu-latest
    needs: [integration-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd ruv-swarm/npm
          npm ci

      - name: Run performance tests
        run: |
          cd ruv-swarm/npm
          npm run test:performance

      - name: Upload benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: ruv-swarm/npm/test-results/